#!/usr/bin/env bash

lein exec <(cat <<EOF

(use 
  (quote 
    [leiningen.exec :only (deps)]))

(deps 
  (quote
    [[es.corygil/corenlp "3.3.1-SNAPSHOT"]
     [edu.stanford.nlp/stanford-corenlp "3.3.1"]
     [edu.stanford.nlp/stanford-corenlp "3.3.1"
      :classifier "models"]
     [org.clojure/data.json "0.2.4"]]))

(ns dependency-parse
  (:use
    corenlp)
  (:require
    [clojure.data.json :as json]))
 
(defn between [n low high]
  (and (>= n low) (<= n high)))

;; TODO: use real CLI argument parsing
                
(defn main [& args]
  (let [min-length 5
        max-length 
        (if (> (count args) 1)
          (Integer/parseInt (second args))
          50)]
    (loop []
      (let [line (.readLine *in*)
            parses 
            (or (try
                  (map dependency-parse
                       (filter #(between (count %) 
                                         min-length
                                         max-length)
                               (split-sentences line))))
                [])]
        (println
          (json/write-str parses))
        (recur)))))

(main *command-line-args*)

EOF) 2> /dev/null 

# vim: set ft=clojure :
